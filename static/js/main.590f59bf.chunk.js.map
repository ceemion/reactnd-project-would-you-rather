{"version":3,"sources":["assets/images/react-logo.svg","assets/images/redux-logo.svg","utils/_DATA.js","utils/api.js","actions/questions.js","actions/users.js","utils/constants.js","actions/common.js","components/Button.js","pages/Login.js","actions/authUser.js","utils/helpers.js","components/QuestionCard.js","components/NavBar.js","pages/Home.js","components/UserCard.js","pages/LeaderBoard.js","pages/NewQuestion.js","components/PercentBar.js","pages/QuestionDetails.js","pages/NotFound.js","App.js","serviceWorker.js","reducers/index.js","reducers/authUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["module","exports","users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionVote","data","qid","answer","_saveQuestionAnswer","handleSaveQuestion","payload","cb","dispatch","getState","showLoading","authUser","then","user","questionId","hideLoading","type","addQuestion","handleInitialData","all","receiveUsers","receiveQuestions","Button","onClick","size","isDisabled","className","disabled","withRouter","connect","loadingBar","userOptions","Object","keys","sort","a","b","localeCompare","map","value","label","props","useState","selectedUser","setSelectedUser","handleRedirect","history","location","state","pathname","from","push","src","reactLogo","alt","reduxLogo","default","options","onChange","placeholder","event","preventDefault","helpers","avatar","optionOneVotes","optionTwoVotes","questionAnswered","includes","questionNotAnswered","calcPercentage","count","total","countInt","parseInt","totalInt","round","width","to","userData","exact","sortedQuestions","unansweredQuestionsId","filter","key","answeredQuestionsId","activeTab","setActiveTab","onTabClick","index","isTabActive","length","LeaderBoard","this","usersId","Component","calcScore","sortUsers","formValues","setFormValues","onTextChange","e","target","required","isFormDisabled","PercentBar","progress","style","match","params","question_id","answered","totalUsers","vote","setVote","setActiveClass","option","updateQuestionVote","updateUserAnswers","handleSaveQuestionVote","NotFound","App","PrivateRoute","children","rest","render","path","Boolean","window","hostname","combineReducers","loadingBarReducer","action","logger","store","next","console","group","log","result","groupEnd","applyMiddleware","thunk","createStore","reducers","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.590f59bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux-logo.5ae1af16.svg\";","let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://avatars2.githubusercontent.com/u/9349859?s=400',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n      \n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import {\n  _getUsers,\n  _getQuestions,\n  _saveQuestion,\n  _saveQuestionAnswer\n} from './_DATA';\n\nexport function getInitialData () {\n  return Promise.all([\n    _getUsers(),\n    _getQuestions(),\n  ])\n  .then(([users, questions]) => {\n    return {\n      users,\n      questions,\n    }\n  })\n}\n\nexport function saveQuestion (question) {\n  return _saveQuestion(question)\n}\n\nexport function saveQuestionVote (data) {\n  return _saveQuestionAnswer(data)\n}\n","import { RECEIVE_QUESTIONS, ADD_QUESTION, UPDATE_QUESTION_VOTE } from \"../utils/constants\";\nimport { saveQuestion, saveQuestionVote } from \"../utils/api\";\nimport { updateUserQuestions, updateUserAnswers } from \"./users\";\nimport { showLoading, hideLoading } from 'react-redux-loading-bar';\n\nfunction addQuestion (question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  }\n}\n\nfunction updateQuestionVote (authUser, qid, vote) {\n  return {\n    type: UPDATE_QUESTION_VOTE,\n    authUser,\n    qid,\n    vote,\n  }\n}\n\nexport function receiveQuestions (questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  }\n}\n\nexport function handleSaveQuestion (payload, cb) {\n  return (dispatch, getState) => {\n    dispatch(showLoading())\n    const { authUser } = getState();\n\n    return saveQuestion({\n      ...payload,\n      author: authUser,\n    })\n    .then((question) => {\n      dispatch(hideLoading())\n      dispatch(addQuestion(question))\n      dispatch(updateUserQuestions(authUser, question.id))\n      cb()\n    })\n  }\n}\n\nexport function handleSaveQuestionVote (qid, vote) {\n  return (dispatch, getState) => {\n    dispatch(showLoading())\n    const { authUser } = getState();\n\n    return saveQuestionVote({\n      authedUser: authUser,\n      qid: qid,\n      answer: vote,\n    })\n    .then(() => {\n      dispatch(hideLoading())\n      dispatch(updateQuestionVote(authUser, qid, vote))\n      dispatch(updateUserAnswers(authUser, qid, vote))\n    })\n  }\n}\n","import {\n  RECEIVE_USERS,\n  UPDATE_USER_QUESTIONS,\n  UPDATE_USER_ANSWERS\n} from \"../utils/constants\";\n\nexport function receiveUsers (users) {\n  return {\n    type: RECEIVE_USERS,\n    users,\n  }\n}\n\nexport function updateUserQuestions (user, questionId) {\n  return {\n    type: UPDATE_USER_QUESTIONS,\n    user,\n    questionId,\n  }\n}\n\nexport function updateUserAnswers (user, questionId, vote) {\n  return {\n    type: UPDATE_USER_ANSWERS,\n    user,\n    questionId,\n    vote,\n  }\n}\n","export const RECEIVE_USERS = 'RECEIVE_USERS';\nexport const UPDATE_USER_QUESTIONS = 'UPDATE_USER_QUESTIONS';\nexport const UPDATE_USER_ANSWERS = 'UPDATE_USER_ANSWERS';\nexport const SET_AUTH_USER = 'SET_AUTH_USER';\nexport const LOGOUT_AUTH_USER = 'LOGOUT_AUTH_USER';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const VOTE_QUESTION = 'VOTE_QUESTION';\nexport const UPDATE_QUESTION_VOTE = 'UPDATE_QUESTION_VOTE';","import { showLoading, hideLoading } from 'react-redux-loading-bar';\nimport { getInitialData } from '../utils/api';\nimport { receiveUsers } from './users';\nimport { receiveQuestions } from './questions';\n\nexport function handleInitialData () {\n  return (dispatch) => {\n    dispatch(showLoading())\n\n    return getInitialData()\n      .then(({ users, questions }) => {\n        dispatch(hideLoading())\n\n        dispatch(receiveUsers(users))\n        dispatch(receiveQuestions(questions))\n      })\n  }\n}\n","import React from 'react';\n\nconst Button = ({ id, text, onClick, type, size, isDisabled }) => {\n  return (\n    <button\n      id={id}\n      onClick={onClick}\n      className={`btn ${type} ${size}`}\n      disabled={isDisabled || false}>\n      { text }\n    </button>\n  )\n}\n\nexport default Button;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setAuthUser } from '../actions/authUser';\nimport { withRouter } from 'react-router-dom';\nimport reactLogo from '../assets/images/react-logo.svg';\nimport reduxLogo from '../assets/images/redux-logo.svg';\nimport Select from 'react-select';\nimport Button from '../components/Button';\n\nconst Login = (props) => {\n  const { userOptions, loadingBar } = props;\n  const [selectedUser, setSelectedUser] = useState(null)\n\n  const btnDisabled = () => {\n    return selectedUser === null\n  }\n\n  const handleLogin = (event) => {\n    const { dispatch, history, location } = props\n\n    event.preventDefault()\n\n    dispatch(setAuthUser(selectedUser.value));\n    handleRedirect(history, location)\n  }\n\n  const handleRedirect = (history, location) => {\n    if (location.state) {\n      const { pathname } = location.state.from;\n      history.push(pathname)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <div className=\"wrapper login\">\n      <div className=\"logo\">\n        <p>Would</p>\n        <p>You</p>\n        <p>Rather?</p>\n      </div>\n      <div className=\"logo-subtext\">\n        React Nanodegree Project\n      </div>\n\n      <div className=\"intro-images\">\n        <div className=\"intro-img\">\n          <img src={reactLogo} alt=\"React\" />\n        </div>\n        <div className=\"intro-img redux\">\n          <img src={reduxLogo} alt=\"Redux\" />\n        </div>\n      </div>\n\n      { loadingBar.default > 0 ? (\n        <div>Loading users...</div>\n      ): (\n        <div>\n          Please login to continue\n\n          <form>\n            <Select\n              id=\"user-select\"\n              className=\"user-select\"\n              value={selectedUser}\n              options={userOptions}\n              onChange={setSelectedUser}\n              placeholder=\"Select User...\"\n            />\n\n            <Button\n              text=\"Log in\"\n              type=\"primary\"\n              onClick={handleLogin}\n              isDisabled={btnDisabled()}\n            />\n          </form>\n        </div>\n      ) }\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ users, loadingBar }) => {\n  const filterAlpha = Object.keys(users).sort((a, b) => a.localeCompare(b))\n\n  return {\n    loadingBar,\n    userOptions: filterAlpha.map(id => (\n      {value: id, label: users[id].name}\n    )),\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));\n","import { SET_AUTH_USER, LOGOUT_AUTH_USER } from \"../utils/constants\";\n\nexport function setAuthUser (id) {\n  return {\n    type: SET_AUTH_USER,\n    id,\n  }\n}\n\nexport function logoutUser () {\n  return {\n    type: LOGOUT_AUTH_USER\n  }\n}\n","const helpers = {\n  formatQuestion: (question, users) => {\n    const { id, author, optionOne, optionTwo, timestamp } = question;\n    const { name, avatarURL } = users[author];\n  \n    return {\n      id,\n      name,\n      timestamp,\n      avatar: avatarURL,\n      optionOneText: optionOne.text,\n      optionOneVotes: optionOne.votes,\n      optionTwoText: optionTwo.text,\n      optionTwoVotes: optionTwo.votes,\n    }\n  },\n\n  questionAnswered: (question, user) => {\n    return question.optionOne.votes.includes(user) || question.optionTwo.votes.includes(user)\n  },\n\n  questionNotAnswered: (question, user) => {\n    return !question.optionOne.votes.includes(user) && !question.optionTwo.votes.includes(user)\n  },\n\n  calcPercentage: (count, total) => {\n    const countInt = parseInt(count);\n    const totalInt = parseInt(total);\n\n    return Math.round((countInt / totalInt) * 100);\n  },\n}\n\nexport default helpers;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport helpers from '../utils/helpers';\nimport { Link } from 'react-router-dom';\n\nconst QuestionCard = ({ question }) => {\n  if (question === null) {\n    return (\n      <div>This question does not exist.</div>\n    )\n  }\n\n  return (\n    <div className=\"question-card\">\n      <div className=\"user\">\n        <div className=\"image\">\n          <img src={question.avatar} alt={`${question.name} avatar`} width={100} />\n        </div>\n\n        <div>\n          <h4 className=\"name\">\n            { question.name }\n          </h4>\n        </div>\n      </div>\n\n      <div className=\"summary\">\n        <h4>Would you rather...</h4>\n        <p>{question.optionOneText}</p>\n        <p>or</p>\n        <p>...</p>\n\n        <Link to={`questions/${question.id}`} className=\"link\">\n          View Poll\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ questions, users }, { id }) => {\n  return {\n    id,\n    question: helpers.formatQuestion(questions[id], users),\n  }\n}\n\nexport default connect(mapStateToProps)(QuestionCard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { logoutUser } from '../actions/authUser';\nimport Button from './Button';\n\nconst NavBar = ({ userData, dispatch }) => {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"nav-logo\">\n        <p>Would</p>\n        <p>You</p>\n        <p>Rather?</p>\n      </div>\n\n      <div className=\"links\">\n        <ul>\n          <li><NavLink exact to=\"/\">Home</NavLink></li>\n          <li><NavLink to=\"/leaderboard\">Leader Board</NavLink></li>\n          <li><NavLink to=\"/add\">New Question</NavLink></li>\n        </ul>\n      </div>\n\n      <div className=\"auth-user\">\n        <div>Hi, {userData.name}</div>\n        <div><img src={userData.avatarURL} alt={`${userData.avatarURL} avatar`} width={40} /></div>\n\n        <div>\n          <Button\n            id=\"logout-btn\"\n            size=\"sm\"\n            text=\"Log Out\"\n            onClick={() => dispatch(logoutUser())}\n          />\n        </div>\n      </div>\n  </nav>\n  )\n}\n\nconst mapStateToProps = ({ authUser, users }) => {\n  return {\n    userData: users[authUser]\n  }\n}\n\nexport default connect(mapStateToProps)(NavBar);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport QuestionCard from '../components/QuestionCard';\nimport helpers from '../utils/helpers';\nimport NavBar from '../components/NavBar';\n\nconst Home = ({ unansweredQuestionsId, answeredQuestionsId }) => {\n  const [activeTab, setActiveTab] = useState(0)\n\n  const onTabClick = (index) => {\n    setActiveTab(index)\n  }\n\n  const isTabActive = (index) => {\n    return activeTab === index ? 'tab active' : 'tab'\n  }\n\n  return (\n    <>\n    <NavBar />\n    <div className=\"wrapper home\">\n      <div className=\"home-nav\">\n        <div className={isTabActive(0)} onClick={() => onTabClick(0)}>\n          Unanswered Questions\n          <span className=\"pill\">{unansweredQuestionsId.length}</span>\n        </div>\n\n        <div className={isTabActive(1)} onClick={() => onTabClick(1)}>\n          Answered Questions\n          <span className=\"pill\">{answeredQuestionsId.length}</span>\n        </div>\n      </div>\n\n      <div className=\"home-content\">\n        { activeTab === 0 && (\n          unansweredQuestionsId.length > 0 ? (\n            unansweredQuestionsId.map(id => (\n              <QuestionCard key={id} id={id} />\n            ))\n          ) : (\n            <div className=\"wrapper-status\">\n              You're all caught up! No unanswered questions.\n            </div>\n          )\n        ) }\n\n        { activeTab === 1 && (\n          answeredQuestionsId.length > 0 ? (\n            answeredQuestionsId.map(id => (\n              <QuestionCard key={id} id={id} />\n            ))\n          ) : (\n            <div className=\"wrapper-status\">\n              No answered questions. Get into the game by voting!\n            </div>\n          )\n        ) }\n      </div>\n    </div>\n    </>\n  )\n}\n\nconst mapStateToProps = ({ authUser, questions }) => {\n  const sortedQuestions = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n\n  return {\n    unansweredQuestionsId: sortedQuestions\n      .filter(key => helpers.questionNotAnswered(questions[key], authUser)),\n\n    answeredQuestionsId: sortedQuestions\n      .filter(key => helpers.questionAnswered(questions[key], authUser)),\n  }\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst UserCard = ({ user}) => {\n  const total = (user) => {\n    return user.questions.length + Object.keys(user.answers).length\n  }\n\n  return (\n    <div className=\"user-card\">\n      <div className=\"user\">\n      <div>\n          <h2 className=\"name\">\n            { user.name }\n          </h2>\n        </div>\n\n        <div className=\"image\">\n          <img src={user.avatarURL} alt={`${user.name} avatar`} width={100} />\n        </div>\n      </div>\n\n      <div className=\"summary\">\n        <p>Asked Questions: {user.questions.length}</p>\n        <p>Answered Questions: {Object.keys(user.answers).length}</p>\n\n        <p className=\"score\">SCORE: <br /> <span>{total(user)}</span></p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ users }, { id }) => {\n  return {\n    id,\n    user: users[id],\n  }\n}\n\nexport default connect(mapStateToProps)(UserCard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UserCard from '../components/UserCard';\nimport NavBar from '../components/NavBar';\n\nclass LeaderBoard extends Component {\n  render() {\n    return (\n      <>\n      <NavBar />\n\n      <div className=\"wrapper leader-board\">\n        <h2>Leader Board</h2>\n\n        {this.props.usersId.map(id => (\n          <UserCard key={id} id={id} />\n        ))}\n      </div>\n      </>\n    )\n  }\n}\n\nconst calcScore = (users, id) => {\n  return users[id].questions.length + Object.keys(users[id].answers).length\n}\n\nconst sortUsers = (users) => {\n  const keys = Object.keys(users)\n\n  return keys.sort((a, b) => {\n    return calcScore(users, b) - calcScore(users, a)\n  })\n}\n\nconst mapStateToProps = ({ users }) => {\n  return {\n    usersId: sortUsers(users)\n  }\n}\n\nexport default connect(mapStateToProps)(LeaderBoard);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { handleSaveQuestion } from '../actions/questions';\nimport NavBar from '../components/NavBar';\nimport { withRouter } from 'react-router-dom';\nimport Button from '../components/Button';\n\nconst NewQuestion = (props) => {\n  const [formValues, setFormValues] = useState({\n    optionOneText: '',\n    optionTwoText: '',\n  });\n\n  const onTextChange = (e) => {\n    const value = e.target.value;\n    const name = e.target.name\n\n    setFormValues(state => ({...state, [name]: value}))\n  };\n\n  const onSaveQuestion =  (event) => {\n    const { dispatch, history } = props;\n    event.preventDefault()\n    dispatch(handleSaveQuestion(formValues, () => history.push('/')))\n  };\n\n  const isFormDisabled = () => {\n    const { loadingBar } = props;\n    return !formValues.optionOneText || !formValues.optionTwoText || loadingBar.default === 1;\n  }\n\n  return (\n    <>\n    <NavBar />\n    <div className=\"wrapper new-question\">\n      <h2>New Polling Question</h2>\n\n      <form className=\"question-form\">\n        <p>Complete the question:</p>\n\n        <h4>Would you rather...</h4>\n\n        <div>\n          <input\n            id=\"optionOne\"\n            type=\"text\"\n            name=\"optionOneText\"\n            value={formValues.optionOneText}\n            onChange={onTextChange}\n            placeholder=\"Option One...\"\n            className=\"text-input\"\n            required\n          />\n        </div>\n\n        <div className=\"or\">\n          <p>OR</p>\n        </div>\n\n        <div>\n          <input\n            id=\"optionTwo\"\n            type=\"text\"\n            name=\"optionTwoText\"\n            value={formValues.optionTwoText}\n            onChange={onTextChange}\n            placeholder=\"Option Two...\"\n            className=\"text-input\"\n            required\n          />\n        </div>\n\n        <div className=\"cta\">\n          <Button\n            text=\"Save\"\n            id=\"save-poll\"\n            type=\"primary\"\n            onClick={onSaveQuestion}\n            isDisabled={isFormDisabled()}\n          />\n        </div>\n      </form>\n    </div>\n    </>\n  )\n}\n\nconst mapStateToProps = ({ loadingBar }) => {\n  return {\n    loadingBar,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(NewQuestion));\n","import React from 'react';\n\nconst PercentBar = ({ progress }) => {\n  return (\n    <div className=\"percent-bar\">\n      <div className=\"progress\" style={{width: `${progress}%`}}>\n        {progress}%\n      </div>\n    </div>\n  )\n}\n\nexport default PercentBar;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport helpers from '../utils/helpers';\nimport { withRouter } from 'react-router-dom';\nimport { handleSaveQuestionVote } from '../actions/questions';\nimport NavBar from '../components/NavBar';\nimport Button from '../components/Button';\nimport PercentBar from '../components/PercentBar';\n\nconst QuestionDetails = (props) => {\n  const {\n    authUser,\n    question,\n    answered,\n    dispatch,\n    totalUsers,\n    loadingBar,\n  } = props;\n\n  const [vote, setVote] = useState('');\n\n  const handleSubmitVote = (e) => {\n    e.preventDefault()\n    dispatch(handleSaveQuestionVote(question.id, vote))\n    setVote('')\n  }\n\n  const setActiveClass = (option) => {\n    return vote === option ? 'option active' : 'option'\n  }\n\n  const isBtnDisabled = () => {\n    return !vote || loadingBar.default === 1\n  }\n\n  if (question === null) {\n    return (\n      <>\n      <NavBar />\n      <div className=\"wrapper\">\n        <h2>Not Found</h2>\n\n        <div className=\"wrapper-status\">\n          Poll does not exist\n        </div>\n      </div>\n      </>\n    )\n  }\n\n  return (\n    <>\n    <NavBar />\n\n    <div className=\"wrapper question-details\">\n      <h5>{question.name} { answered ? 'asked:' : 'asks...' }</h5>\n\n      <div className=\"body\">\n        <div className=\"user\">\n          <img src={question.avatar} alt={`${question.avatar} avatar`} width={100} />\n        </div>\n\n        <div className=\"questions\">\n          { answered ? (\n            <>\n              <h3>Poll Results</h3>\n\n              <div className={`answer ${question.optionOneVotes.includes(authUser) ? 'selected' : ''}`}>\n                <p>{question.optionOneText}</p>\n\n                <PercentBar\n                  progress={helpers.calcPercentage(question.optionOneVotes.length, totalUsers)}\n                />\n                <p>{question.optionOneVotes.length} out of {totalUsers} votes</p>\n              </div>\n\n              <div className={`answer ${question.optionTwoVotes.includes(authUser) ? 'selected' : ''}`}>\n                <p>{question.optionTwoText}</p>\n\n                <PercentBar\n                  progress={helpers.calcPercentage(question.optionTwoVotes.length, totalUsers)}\n                />\n                <p>{question.optionTwoVotes.length} out of {totalUsers} votes</p>\n              </div>\n            </>\n          ) : (\n            <>\n              <h3>Would you rather?</h3>\n\n              <div className=\"options\">\n                <div className={setActiveClass('optionOne')} onClick={() => setVote('optionOne')}>\n                  {question.optionOneText}\n                </div>\n\n                <div className={setActiveClass('optionTwo')} onClick={() => setVote('optionTwo')}>\n                  {question.optionTwoText}\n                </div>\n              </div>\n            </>\n          ) }\n\n          { answered || (\n            <div className=\"cta\">\n              <Button\n                id=\"vote-btn\"\n                text=\"Vote Now\"\n                type=\"primary\"\n                onClick={handleSubmitVote}\n                isDisabled={isBtnDisabled()}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}\n\nconst mapStateToProps = ({ authUser, questions, users, loadingBar }, { match }) => {\n  const { question_id } = match.params;\n  const question = questions[question_id]\n\n  return {\n    authUser,\n    loadingBar,\n    question: question ? helpers.formatQuestion(question, users) : null,\n    answered: question ? helpers.questionAnswered(question, authUser) : false,\n    totalUsers: Object.keys(users).length,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(QuestionDetails));\n","import React from 'react';\nimport NavBar from '../components/NavBar';\n\nconst NotFound = () => {\n  return (\n    <>\n    <NavBar />\n    <div className=\"wrapper\">\n      <h2>404 - Not Found</h2>\n\n      <div className=\"wrapper-status\">\n        The page you seek cannot be found :(\n      </div>\n    </div>\n    </>\n  )\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { handleInitialData } from './actions/common';\nimport LoadingBar from 'react-redux-loading-bar';\n\n// pages\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport LeaderBoard from './pages/LeaderBoard';\nimport NewQuestion from './pages/NewQuestion';\nimport QuestionDetails from './pages/QuestionDetails';\nimport NotFound from './pages/NotFound';\n\nclass App extends Component {\n  componentDidMount () {\n    const { authUser, dispatch } = this.props;\n\n    if (authUser === null) {\n      dispatch(handleInitialData())\n    }\n  }\n\n  render() {\n    const { authUser } = this.props;\n\n    const PrivateRoute = ({ children, ...rest }) => {\n      return (\n        <Route {...rest} render={({ location }) =>\n            authUser ? (\n              children\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: { from: location }\n                }}\n              />\n            )\n          }\n        />\n      );\n    }\n\n    return (\n      <Router>\n        <>\n        <LoadingBar className=\"loading-bar\" />\n\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n\n            <PrivateRoute exact path=\"/\">\n              <Home />\n            </PrivateRoute>\n\n            <PrivateRoute path=\"/add\">\n              <NewQuestion />\n            </PrivateRoute>\n\n            <PrivateRoute path=\"/questions/:question_id\">\n              <QuestionDetails />\n            </PrivateRoute>\n\n            <PrivateRoute path=\"/leaderboard\">\n              <LeaderBoard />\n            </PrivateRoute>\n\n            <PrivateRoute path=\"*\">\n              <NotFound />\n            </PrivateRoute>\n          </Switch>\n        </div>\n        </>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authUser }) => {\n  return {\n    authUser\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { loadingBarReducer } from 'react-redux-loading-bar'\nimport users from './users';\nimport authUser from './authUser';\nimport questions from './questions';\n\nexport default combineReducers({\n  loadingBar: loadingBarReducer,\n  authUser,\n  users,\n  questions,\n})\n","import { SET_AUTH_USER, LOGOUT_AUTH_USER } from \"../utils/constants\";\n\nexport default function authUser (state = null, action) {\n  switch (action.type) {\n    case SET_AUTH_USER:\n      return action.id\n    case LOGOUT_AUTH_USER:\n      return null\n    default:\n      return state\n  }\n}\n","import {\n  RECEIVE_USERS,\n  UPDATE_USER_QUESTIONS,\n  UPDATE_USER_ANSWERS\n} from \"../utils/constants\";\n\nexport default function users (state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        ...action.users,\n      }\n    case UPDATE_USER_QUESTIONS:\n      return {\n        ...state,\n        [action.user]: {\n          ...state[action.user],\n          questions: state[action.user].questions.concat([action.questionId])\n        }\n      }\n    case UPDATE_USER_ANSWERS:\n      return {\n        ...state,\n        [action.user]: {\n          ...state[action.user],\n          answers: {\n            ...state[action.user].answers,\n            [action.questionId]: action.vote\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n","import { RECEIVE_QUESTIONS, ADD_QUESTION, UPDATE_QUESTION_VOTE } from '../utils/constants';\n\nexport default function question (state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions,\n      }\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.question.id]: action.question,\n      }\n    case UPDATE_QUESTION_VOTE:\n      return {\n        ...state,\n        [action.qid]: {\n          ...state[action.qid],\n          [action.vote]: {\n            ...state[action.qid][action.vote],\n            votes: state[action.qid][action.vote].votes.concat(action.authUser)\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type)\n  \n  console.log(\"The action is: \", action)\n  const result = next(action)\n  console.log(\"The new state is: \", store.getState())\n\n  console.groupEnd()\n\n  return result\n}\n\nexport default logger;\n","import thunk from \"redux-thunk\";\nimport { applyMiddleware } from \"redux\";\nimport logger from \"./logger\";\n\nexport default applyMiddleware(\n  thunk,\n  logger,\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers';\nimport middleware from './middleware';\n\nconst store = createStore(reducers, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}